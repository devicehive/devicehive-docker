apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-devicehive-frontend
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    component: "devicehive-frontend"
    heritage: "{{ .Release.Service }}"
    release: "{{ .Release.Name }}"
spec:
  replicas: {{ .Values.javaServer.frontend.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-devicehive-frontend
    spec:
      serviceAccountName: {{ if .Values.rbac.create }}{{ template "devicehive.fullname" . }}{{ else }}"{{ .Values.rbac.serviceAccountName }}"{{ end}}
      containers:
      - name: devicehive-frontend
        image: "{{ .Values.javaServer.repository }}/devicehive-frontend:{{ .Values.javaServer.tag }}"
        imagePullPolicy: {{ .Values.javaServer.pullPolicy }}
        env:
        {{- if eq .Values.javaServer.bus "rpc" }}
        - name: DH_KAFKA_BOOTSTRAP_SERVERS
          value: "{{ .Release.Name }}-kafka:9092"
        - name: DH_ZK_ADDRESS
          value: "{{ .Release.Name }}-zookeeper"
        - name: DH_ZK_PORT
          value: "2181"
        - name: SPRING_PROFILES_ACTIVE
          value: "rpc-client"
        {{- else }}
        - name: DH_WS_PROXY
          value: "{{ .Release.Name }}-devicehive-ws-proxy-internal:3000"
        {{- end }}
        - name: DH_AUTH_URL
          value: "http://{{ .Release.Name }}-devicehive-auth:8090/auth/rest"
        - name: DH_POSTGRES_ADDRESS
          value: "{{ .Release.Name }}-postgresql"
        - name: DH_POSTGRES_DB
          value: "{{ .Values.postgresql.postgresDatabase }}"
        - name: DH_POSTGRES_PORT
          value: "5432"
        - name: DH_POSTGRES_USERNAME
          value: "{{ .Values.postgresql.postgresUser }}"
        - name: DH_POSTGRES_PASSWORD
          value: "{{ .Values.postgresql.postgresPassword }}"
        - name: HC_GROUP_NAME
          value: "dev"
        - name: HC_GROUP_PASSWORD
          value: "dev-pass"
        - name: HC_MEMBERS
          value: "{{ .Release.Name }}-devicehive-hazelcast"
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-jwtsecret
              key: jwtSecret
        - name: DH_LOG_LEVEL
          value: {{ .Values.javaServer.frontend.dhLogLevel | quote }}
        - name: ROOT_LOG_LEVEL
          value: {{ .Values.javaServer.frontend.rootLogLevel | quote }}
        ports:
        - name: dh-api
          containerPort: 8080
        readinessProbe:
          httpGet:
            path: /api/rest/info
            port: dh-api
          initialDelaySeconds: 60
        livenessProbe:
          httpGet:
            path: /api/rest/info
            port: dh-api
          initialDelaySeconds: 90
          periodSeconds: 15
        resources:
{{ toYaml .Values.javaServer.frontend.resources | indent 10 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
